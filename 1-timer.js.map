{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nlet userSelectedDate = null;\nlet timerId = null;\n\nconst refs = {\n  startBtn: document.querySelector('[data-start]'),\n  input: document.querySelector('#datetime-picker'),\n  days: document.querySelector('[data-days]'),\n  hours: document.querySelector('[data-hours]'),\n  minutes: document.querySelector('[data-minutes]'),\n  seconds: document.querySelector('[data-seconds]'),\n};\n\nrefs.startBtn.disabled = true;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    const selected = selectedDates[0];\n    if (selected <= new Date()) {\n      iziToast.error({\n        message: 'Please choose a date in the future',\n        position: 'topRight',\n      });\n      refs.startBtn.disabled = true;\n    } else {\n      userSelectedDate = selected;\n      refs.startBtn.disabled = false;\n    }\n  },\n};\n\nflatpickr(refs.input, options);\n\nrefs.startBtn.addEventListener('click', () => {\n  refs.startBtn.disabled = true;\n  refs.input.disabled = true;\n\n  timerId = setInterval(() => {\n    const timeLeft = userSelectedDate - new Date();\n\n    if (timeLeft <= 0) {\n      clearInterval(timerId);\n      updateTimerDisplay(0);\n      refs.input.disabled = false;\n      return;\n    }\n\n    updateTimerDisplay(timeLeft);\n  }, 1000);\n});\n\nfunction updateTimerDisplay(ms) {\n  const { days, hours, minutes, seconds } = convertMs(ms);\n\n  refs.days.textContent = addLeadingZero(days);\n  refs.hours.textContent = addLeadingZero(hours);\n  refs.minutes.textContent = addLeadingZero(minutes);\n  refs.seconds.textContent = addLeadingZero(seconds);\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n"],"names":["userSelectedDate","timerId","refs","options","selectedDates","selected","iziToast","flatpickr","timeLeft","updateTimerDisplay","ms","days","hours","minutes","seconds","convertMs","addLeadingZero","value"],"mappings":"2FAKA,IAAIA,EAAmB,KACnBC,EAAU,KAEd,MAAMC,EAAO,CACX,SAAU,SAAS,cAAc,cAAc,EAC/C,MAAO,SAAS,cAAc,kBAAkB,EAChD,KAAM,SAAS,cAAc,aAAa,EAC1C,MAAO,SAAS,cAAc,cAAc,EAC5C,QAAS,SAAS,cAAc,gBAAgB,EAChD,QAAS,SAAS,cAAc,gBAAgB,CAClD,EAEAA,EAAK,SAAS,SAAW,GAEzB,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,MAAMC,EAAWD,EAAc,CAAC,EAC5BC,GAAY,IAAI,MAClBC,EAAS,MAAM,CACb,QAAS,qCACT,SAAU,UAClB,CAAO,EACDJ,EAAK,SAAS,SAAW,KAEzBF,EAAmBK,EACnBH,EAAK,SAAS,SAAW,GAE5B,CACH,EAEAK,EAAUL,EAAK,MAAOC,CAAO,EAE7BD,EAAK,SAAS,iBAAiB,QAAS,IAAM,CAC5CA,EAAK,SAAS,SAAW,GACzBA,EAAK,MAAM,SAAW,GAEtBD,EAAU,YAAY,IAAM,CAC1B,MAAMO,EAAWR,EAAmB,IAAI,KAExC,GAAIQ,GAAY,EAAG,CACjB,cAAcP,CAAO,EACrBQ,EAAmB,CAAC,EACpBP,EAAK,MAAM,SAAW,GACtB,MACD,CAEDO,EAAmBD,CAAQ,CAC5B,EAAE,GAAI,CACT,CAAC,EAED,SAASC,EAAmBC,EAAI,CAC9B,KAAM,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUL,CAAE,EAEtDR,EAAK,KAAK,YAAcc,EAAeL,CAAI,EAC3CT,EAAK,MAAM,YAAcc,EAAeJ,CAAK,EAC7CV,EAAK,QAAQ,YAAcc,EAAeH,CAAO,EACjDX,EAAK,QAAQ,YAAcc,EAAeF,CAAO,CACnD,CAEA,SAASE,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CAEA,SAASF,EAAUL,EAAI,CAMrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC"}